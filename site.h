// https://htmlcompressor.com/compressor/

const char *index_html = "<!DOCTYPE html> <html> <head> <meta name=viewport content=\"width=device-width, initial-scale=1.0\"> <style>*{font-family:'Trebuchet MS',sans-serif}html,body{background:#29333b;color:#eee;margin:0}.loading{text-align:center}header{background:#eee;color:#29333b;display:flex}button{background:#29333b;color:#eee;border:0;padding:10px 20px;border-radius:5px;cursor:pointer;margin-right:10px}input{max-width:100%;box-sizing:border-box;-webkit-box-sizing:border-box;-moz-box-sizing:border-box}select{width:100%;max-width:100%;border:1px solid;margin-top:5px;padding:5px 10px;border-radius:5px}.textField,.numberField{width:100%;max-width:100%;border:1px solid;margin-top:5px;padding:5px 10px;border-radius:5px}.title{padding:10px}.spacer{flex-grow:1}.settings{display:none;padding:10px;cursor:pointer}#app{position:relative;display:none;margin:0 auto;max-width:300px}.dataValueBox{padding:20px 10px;border-bottom:1px solid #eee}.dataValueBox:last-child{border-bottom:0}.name{font-size:16px}.value{text-align:center;font-size:30px;margin:5px 0}.value .unit{font-size:20px;margin-left:5px}.subValuesBox{text-align:center}.subValue{text-align:center;width:fit-content;margin:5px 15px;display:block;display:inline-block}.subValueValue{font-size:20px}.subValueValue .unit{font-size:14px;margin-left:5px}.subValueKey{font-size:14px}.settingsView{display:none;background:#fff;width:100%;min-height:30px;position:absolute;top:0;color:#29333b;padding-bottom:20px;border-bottom:40px solid #29333b}.settingsContext{margin:0 20px}.SettingItem{width:100%;margin-bottom:15px}</style> </head> <body> <header> <div class=title>Climate Sens</div> <div class=spacer></div> <div class=settings id=SettingsButton>Settings</div> </header> <div class=loading id=loading> <h1>Loading</h1> </div> <main id=app> <div class=dataView id=dataView> <h2>No data available</h2> </div> <div class=settingsView id=settingsView> <div class=settingsContext> <h2>Settings</h2> <hr/> <div id=settings> </div> </div> </div> </main> <script>var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.arrayIteratorImpl=function(a){var c=0;return function(){return c<a.length?{done:!1,value:a[c++]}:{done:!0}}};$jscomp.arrayIterator=function(a){return{next:$jscomp.arrayIteratorImpl(a)}};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1; $jscomp.defineProperty=$jscomp.ASSUME_ES5||\"function\"==typeof Object.defineProperties?Object.defineProperty:function(a,c,b){a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)};$jscomp.getGlobal=function(a){a=[\"object\"==typeof globalThis&&globalThis,\"object\"==typeof window&&window,\"object\"==typeof self&&self,\"object\"==typeof global&&global,a];for(var c=0;c<a.length;++c){var b=a[c];if(b&&b.Math==Math)return b}throw Error(\"Cannot find global object\");};$jscomp.global=$jscomp.getGlobal(this); $jscomp.SYMBOL_PREFIX=\"jscomp_symbol_\";$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){};$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)};$jscomp.SymbolClass=function(a,c){this.$jscomp$symbol$id_=a;$jscomp.defineProperty(this,\"description\",{configurable:!0,writable:!0,value:c})};$jscomp.SymbolClass.prototype.toString=function(){return this.$jscomp$symbol$id_}; $jscomp.Symbol=function(){function a(b){if(this instanceof a)throw new TypeError(\"Symbol is not a constructor\");return new $jscomp.SymbolClass($jscomp.SYMBOL_PREFIX+(b||\"\")+\"_\"+c++,b)}var c=0;return a}(); $jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var a=$jscomp.global.Symbol.iterator;a||(a=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol(\"Symbol.iterator\"));\"function\"!=typeof Array.prototype[a]&&$jscomp.defineProperty(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))}});$jscomp.initSymbolIterator=function(){}}; $jscomp.initSymbolAsyncIterator=function(){$jscomp.initSymbol();var a=$jscomp.global.Symbol.asyncIterator;a||(a=$jscomp.global.Symbol.asyncIterator=$jscomp.global.Symbol(\"Symbol.asyncIterator\"));$jscomp.initSymbolAsyncIterator=function(){}};$jscomp.iteratorPrototype=function(a){$jscomp.initSymbolIterator();a={next:a};a[$jscomp.global.Symbol.iterator]=function(){return this};return a}; $jscomp.iteratorFromArray=function(a,c){$jscomp.initSymbolIterator();a instanceof String&&(a+=\"\");var b=0,d={next:function(){if(b<a.length){var e=b++;return{value:c(e,a[e]),done:!1}}d.next=function(){return{done:!0,value:void 0}};return d.next()}};d[Symbol.iterator]=function(){return d};return d}; $jscomp.polyfill=function(a,c,b,d){if(c){b=$jscomp.global;a=a.split(\".\");for(d=0;d<a.length-1;d++){var e=a[d];e in b||(b[e]={});b=b[e]}a=a[a.length-1];d=b[a];c=c(d);c!=d&&null!=c&&$jscomp.defineProperty(b,a,{configurable:!0,writable:!0,value:c})}};$jscomp.polyfill(\"Array.prototype.keys\",function(a){return a?a:function(){return $jscomp.iteratorFromArray(this,function(a){return a})}},\"es6\",\"es3\");var data=[],Settings=[],NewSettings={},settingsActive=!1; function display(){document.getElementById(\"loading\").style.display=\"none\";document.getElementById(\"app\").style.display=\"block\";document.getElementById(\"SettingsButton\").style.display=\"block\"} function renderData(){if(data&&0!=data.length){for(var a=\"\",c=0;c<data.length;c++){var b=data[c];a+=\"<div class='dataValueBox'>\";var d=\"\";b.unit&&(d=\"<span class='unit'>\"+b.unit+\"</span>\");b.name&&(a+=\"<div class='name'>\"+b.name+\"</div>\");b.value&&(a+=\"<div class='value'>\"+b.value+d+\"</div>\");if(b.subValues&&0<Object.keys(b.subValues).length){a+=\"<div class='subValuesBox'>\";for(var e=0;e<Object.keys(b.subValues).length;e++){var f=Object.keys(b.subValues)[e];a+=\"<div class='subValue'><div class='subValueValue'>\"+ b.subValues[f]+d+\"</div><div class='subValueKey'>\"+f+\"</div></div>\"}a+=\"</div>\"}a+=\"</div>\"}document.getElementById(\"dataView\").innerHTML=a}else document.getElementById(\"dataView\").innerHTML=\"<h2>No data available</h2>\"} function renderSettings(){if(Settings&&0!=Settings.length){for(var a=\"\",c=!1,b=0;b<Settings.length;b++)if(Settings[b].type&&Settings[b].name){c=!0;var d=\"\";Settings[b].value&&(d=Settings[b].value);Settings[b].value&&(d=Settings[b].value);var e=\"\";Settings[b].name&&(e=Settings[b].name);a+=\"<div class='SettingItem'>\";a+=\"<div class='SettingName'>\"+Settings[b].name+\"</div>\";switch(Settings[b].type){case \"select\":a+=\"<select value='\"+d+\"' name='\"+e+\"' onclick='handleSettingChange(event)'>\";if(Settings[b].options)for(d= Settings[b].options,e=0;e<d.length;e++)a+=\"<option value='\"+d[e]+\"'>\"+d[e]+\"</option>\";a+=\"</select>\";break;case \"number\":a+=\"<input class='numberField' type='number' value='\"+d+\"' name='\"+e+\"' onclick='handleSettingChange(event)'/>\";break;case \"checkbox\":a+=\"<input class='checkboxFeild' type='checkbox' checked='\"+d+\"' name='\"+e+\"' onclick='handleSettingCheckChange(event)'/>\";break;default:a+=\"<input class='textField' type='text' value='\"+d+\"' name='\"+e+\"' onchange='handleSettingChange(event)'/>\"}a+= \"</div>\"}c?(a+=\"<button onclick='handleSettingSave()' >Save</button><button onclick='handleSettingClose()' >Close</button>\",NewSettings={},document.getElementById(\"settings\").innerHTML=a):document.getElementById(\"settings\").innerHTML=\"<h2>No settings available.</h2>\"}else console.log(\"No Data\"),document.getElementById(\"settings\").innerHTML=\"<h2>No settings available.</h2>\"} function getData(){var a=new XMLHttpRequest;a.open(\"GET\",\"/get/data\",!0);a.onreadystatechange=function(){4==this.readyState&&200==this.status&&(data=JSON.parse(this.responseText),renderData(),display(),setTimeout(getData,1E4))};a.send()} function getSettings(){var a=new XMLHttpRequest;a.open(\"GET\",\"/get/settings\",!0);a.onreadystatechange=function(){4==this.readyState&&200==this.status&&(Settings=JSON.parse(this.responseText))};a.send()}function handleSettingsButton(){(settingsActive=!settingsActive)?(document.getElementById(\"settingsView\").style.display=\"block\",renderSettings()):document.getElementById(\"settingsView\").style.display=\"none\"} function handleSettingSave(){var a=new XMLHttpRequest;a.open(\"POST\",\"/post/settings\",!0);a.onreadystatechange=function(){200==this.status?(alert(\"Success\"),getSettings(),settingsActive=!1,document.getElementById(\"settingsView\").style.display=\"none\"):alert(\"Error\")};a.setRequestHeader(\"Content-Type\",\"application/json\");a.send(JSON.stringify(NewSettings))}function handleSettingClose(){settingsActive=!1;document.getElementById(\"settingsView\").style.display=\"none\"} function handleSettingChange(a){var c={};NewSettings=Object.assign({},NewSettings,(c[a.target.name]=a.target.value,c))}function handleSettingCheckChange(a){var c={};NewSettings=Object.assign({},NewSettings,(c[a.target.name]=a.target.checked,c))}document.getElementById(\"SettingsButton\").addEventListener(\"click\",handleSettingsButton);getData();getSettings();</script> </body> </html>";
